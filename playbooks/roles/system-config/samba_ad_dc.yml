- name: Configure Samba AD DC and DNS on Proxmox
  hosts: samba
  become: yes
  vars:
    ansible_user: ubuntu
    ansible_ssh_private_key_file: ~/.ssh/samba_id_rsa
    # ansible_python_interpreter: /usr/bin/python3
    samba_packages:
      - samba
      - samba-dsdb-modules
      - samba-vfs-modules
      - winbind
      - libnss-winbind
      - libpam-winbind
      - krb5-user
      - krb5-config
    bind9_packages:
      - bind9
      - bind9utils
      - bind9-doc
    dns_forwarder_ip: "192.168.1.100"
    domain_name: "icarlosmendez.info"
    samba_share_name: "sys_admin_share"
    samba_share_path: "/srv/samba/sys_admin_share"
  tasks:
    # - name: Select installation mode
    #   set_fact:
    #     install_mode: "{{ prompt('Select Installation Mode (incremental/expedited):', default='incremental', echo=True) }}"
    - name: Update package lists if necessary
      apt:
        update_cache: yes
      when: update_package_lists | default(true)
    - name: Perform distribution upgrade
      block:
        - name: Upgrade the system distribution
          apt:
            upgrade: dist
            autoremove: yes
            autoclean: yes
          register: upgrade_result
          ignore_errors: yes
        - name: Fail if distribution upgrade failed
          fail:
            msg: "Distribution upgrade failed. Please check and resolve the issue."
          when: upgrade_result is failed
      rescue:
        - name: Debug distribution upgrade failure
          debug:
            msg: "Distribution upgrade failed. Please check and resolve the issue."
    - name: Install Samba and dependencies
      apt:
        name: "{{ samba_packages }}"
        state: present
    - name: Provision Samba as an AD DC
      command: samba-tool domain provision --use-rfc2307 --interactive
      register: provision_result
      when: provision_result is undefined
    - name: Install BIND9
      apt:
        name: "{{ bind9_packages }}"
        state: present
    - name: Configure BIND9 options
      blockinfile:
        path: /etc/bind/named.conf.options
        block: |
          options {
              directory "/var/cache/bind";

              forwarders {
                  {{ dns_forwarder_ip }};
              };

              dnssec-validation no;

              auth-nxdomain no;    # conform to RFC1035
              listen-on-v6 { any; };
          };
    - name: Include BIND9 DLZ configuration
      lineinfile:
        path: /etc/bind/named.conf.local
        line: 'include "/var/lib/samba/bind-dns/named.conf";'
        state: present
    - name: Set permissions for BIND9 DLZ configuration
      file:
        path: /var/lib/samba/bind-dns/named.conf
        owner: bind
        group: bind
    - name: Set permissions for DNS keytab
      file:
        path: /var/lib/samba/bind-dns/dns.keytab
        owner: bind
        group: bind
    - name: Restart BIND9
      systemd:
        name: bind9
        state: restarted
    - name: Add Samba user
      user:
        name: "{{ item }}"
        state: present
      loop: "{{ lookup('prompt', 'Enter new usernames (comma separated):').split(',') }}"
    - name: Create Samba share directory
      file:
        path: "{{ samba_share_path }}"
        state: directory
        mode: '0755'
    - name: Configure Samba share
      blockinfile:
        path: /etc/samba/smb.conf
        block: "[{{ samba_share_name }}]\n    comment = Samba File Server Share for SysAdmins\n    path = {{ samba_share_path }}\n    browsable = yes\n    guest ok = yes \n    read only = no\n    create mask = 0755\n"
    - name: Restart Samba services
      systemd:
        name: "{{ item }}"
        state: restarted
      loop:
        - smbd.service
        - nmbd.service
    - name: Test DNS resolution
      command: dig {{ domain_name }}
      register: dig_result
    - name: Display DNS test result
      debug:
        msg: "{{ dig_result.stdout }}"
    - name: Reboot the server
      reboot:
        msg: "Reboot initiated by Ansible"
      when: "'yes' in prompt('Would you like to reboot now? (yes/no):', default='no', echo=True)"
